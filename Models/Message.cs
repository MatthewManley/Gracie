using System;
using System.Collections.Generic;
using System.Text;

namespace Gracie.Models
{
    /// <summary>
    /// Represents a message sent in a channel within Discord
    /// https://discord.com/developers/docs/resources/channel#message-object
    /// </summary>
    public class Message
    {
        /// <summary>
        /// id of the message
        /// </summary>
        [PropertyName("id")]
        public ulong Id { get; set; }

        /// <summary>
        /// id of the channel the message was sent in
        /// </summary>
        [PropertyName("channel_id")]
        public ulong ChannelId { get; set; }

        /// <summary>
        /// id of the guild the message was sent in
        /// </summary>
        [PropertyName("guild_id")]
        public ulong? GuildId { get; set; }

        [PropertyName("author")]
        public User Author { get; set; }

        /// <summary>
        /// member properties for this message's author
        /// </summary>
        [PropertyName("member")]
        public GuildMember Member { get; set; }

        /// <summary>
        /// contents of the message
        /// </summary>
        [PropertyName("content")]
        public string Content { get; set; }

        /// <summary>
        /// when this message was sent
        /// </summary>
        [PropertyName("timestamp")]
        public string Timestamp { get; set; }

        /// <summary>
        /// when this message was edited (or null if never)
        /// </summary>
        [PropertyName("edited_timestamp")]
        public string EditedTimestamp { get; set; }

        /// <summary>
        /// whether this was a TTS message
        /// </summary>
        [PropertyName("tts")]
        public bool TextToSpeech { get; set; }

        /// <summary>
        /// whether this message mentions everyone
        /// </summary>
        [PropertyName("mention_everyone")]
        public bool MentionEveryone { get; set; }

        /// <summary>
        /// users specifically mentioned in the message
        /// </summary>
        [PropertyName("mentions")]
        public List<User> UserMentions { get; set; }

        /// <summary>
        /// channels specifically mentioned in this message
        /// </summary>
        [PropertyName("mention_channels")]
        public List<Role> RoleMentions { get; set; }

        //TODO: attachments
        //TODO: embeds
        //TODO: reactons

        /// <summary>
        /// used for validating a message was sent
        /// </summary>
        [PropertyName("nonce")]
        public string Nonce { get; set; }

        /// <summary>
        /// whether this message is pinned
        /// </summary>
        [PropertyName("pinned")]
        public bool Pinned { get; set; }

        /// <summary>
        /// if the message is generated by a webhook, this is the webhook's id
        /// </summary>
        [PropertyName("webhook_id")]
        public ulong? WebhookId { get; set; }

        /// <summary>
        /// type of message
        /// https://discord.com/developers/docs/resources/channel#message-object-message-types
        /// </summary>
        [PropertyName("type")]
        public int Type { get; set; }

        //TODO: activity
        //TODO: application
        //TODO: message_reference

        /// <summary>
        /// message flags ORd together, describes extra features of the message
        /// https://discord.com/developers/docs/resources/channel#message-object-message-flags
        /// </summary>
        [PropertyName("flags")]
        public int? flags { get; set; }
    }
}
